name: Hardware CI Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  hardware-tests:
    runs-on: self-hosted
    
    steps:
    - name: Clone Test-O-Matic-hardwareCI repository
      run: |
        $repo_url = "${{ github.event.inputs.repository_url }}"
        if ([string]::IsNullOrEmpty($repo_url)) {
          $repo_url = "https://github.com/bcmi-labs/Test-O-Matic-hardwareCI.git"
        }
        Write-Host "Repository URL: $repo_url"
        
        # Remove existing directory if it exists
        if (Test-Path "test-o-matic") {
          Write-Host "Removing existing test-o-matic directory..."
          Remove-Item -Path "test-o-matic" -Recurse -Force
        }
        
        Write-Host "Cloning repository: $repo_url"
        git clone $repo_url test-o-matic
        if ($LASTEXITCODE -ne 0) {
          Write-Host "::error::Failed to clone repository. Please check if the repository exists and is accessible."
          exit 1
        }
        
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Install dependencies
      run: |
        cd test-o-matic/unit-tests
        go mod download
        
    - name: Run hardware tests
      run: |
        cd test-o-matic/unit-tests
        $test_params = "${{ github.event.inputs.test_parameters }}"
        if ([string]::IsNullOrEmpty($test_params)) {
          $test_params = "serialMS i2c can"
        }
        Write-Host "Running tests with parameters: $test_params"
        $params_array = $test_params -split '\s+'
        $go_args = @("run", "main.go")
        foreach ($param in $params_array) {
          $go_args += "-test"
          $go_args += $param
        }
        & go @go_args
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: hardware-test-results
        path: test-o-matic/unit-tests/test_results_*.json
        retention-days: 7